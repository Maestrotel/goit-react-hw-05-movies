{"version":3,"file":"static/js/346.62b93601.chunk.js","mappings":"+PACA,EAA+B,kC,SC+C/B,MA1CA,WACE,OAAwCA,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAkBR,OAhBAE,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CACA,IAAMG,EAAgB,mCAAG,WAAMC,GAAN,uFAErBP,GAAa,GAFQ,UAGEQ,EAAAA,EAAAA,IAAWD,GAHb,OAGfE,EAHe,OAIrBX,EAAgBW,GAJK,gDAMrBP,EAAS,KAAMQ,SANM,yBAQrBV,GAAa,GARQ,4EAAH,sDAWtBM,EAAiBH,EAZG,CAarB,GAAE,CAACA,KAGF,gCACa,OAAVF,IAAkB,iDAAyBA,KAC3CF,IAAa,SAACY,EAAA,EAAD,KACd,eAAIC,UAAWC,EAAf,SACGC,MAAMC,QAAQlB,KAAd,OACCA,QADD,IACCA,OADD,EACCA,EAAcmB,KAAI,SAAAC,GAChB,OACE,2BACE,wBAAKA,EAAEC,UACP,uBAAID,EAAEE,YAFCF,EAAEV,GAKd,OAEoB,IAAxBV,EAAauB,SAAgB,uDAGnC,C","sources":["webpack://goit-react-hw-05-movies/./src/pages/ReviewsPage/ReviewsPage.module.css?3ad9","pages/ReviewsPage/ReviewsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"reviewsStyle\":\"ReviewsPage_reviewsStyle__pAv3h\"};","import Loader from 'components/Loader/Loader';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from 'services/api';\nimport css from './ReviewsPage.module.css';\n\nfunction ReviewsPage() {\n  const [movieReviews, setMovieRexiews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) return;\n    const fetchFilmReviews = async id => {\n      try {\n        setIsLoading(true);\n        const trending = await getReviews(id);\n        setMovieRexiews(trending);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchFilmReviews(movieId);\n  }, [movieId]);\n\n  return (\n    <>\n      {error !== null && <p>Something went wrong {error}</p>}\n      {isLoading && <Loader />}\n      <ul className={css.reviewsStyle}>\n        {Array.isArray(movieReviews) &&\n          movieReviews?.map(f => {\n            return (\n              <li key={f.id}>\n                <h3>{f.author}</h3>\n                <p>{f.content}</p>\n              </li>\n            );\n          })}\n      </ul>\n      {movieReviews.length === 0 && <p>No reviews for this movie</p>}\n    </>\n  );\n}\n\nexport default ReviewsPage;\n"],"names":["useState","movieReviews","setMovieRexiews","isLoading","setIsLoading","error","setError","movieId","useParams","useEffect","fetchFilmReviews","id","getReviews","trending","message","Loader","className","css","Array","isArray","map","f","author","content","length"],"sourceRoot":""}