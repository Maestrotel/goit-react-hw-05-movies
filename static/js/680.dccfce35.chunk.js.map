{"version":3,"file":"static/js/680.dccfce35.chunk.js","mappings":"2KAyBA,IArBA,YAAuC,IAAlBA,EAAiB,EAAjBA,cACbC,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACGC,MAAMC,QAAQJ,IACbA,EAAcK,KAAI,SAAAC,GAChB,OACE,SAAC,KAAD,CACEC,MAAO,CAAEC,KAAMP,GAEfQ,UAAU,cACVC,GAAE,kBAAaJ,EAAEK,IAJnB,UAME,wBAAKL,EAAEM,MAAQN,EAAEO,SAJZP,EAAEK,GAOZ,KAGR,C,kHCcD,UAhCA,WACE,OAA4CG,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,oGAEhBJ,GAAa,GAFG,UAGOK,EAAAA,EAAAA,MAHP,OAGVC,EAHU,OAIhBR,EAAkBQ,GAJF,gDAMhBJ,EAAS,KAAMK,SANC,yBAQhBP,GAAa,GARG,4EAAH,qDAWjBI,GACD,GAAE,KAGD,0BACE,4BACE,2CACW,OAAVH,IAAkB,iDAAyBA,KAC3CF,IAAa,SAAC,IAAD,KACd,SAAC,IAAD,CAAWjB,cAAee,QAIjC,C,sLC9BKW,E,OAAWC,EAAAA,OAAa,CAC5BC,QAJe,+BAKfC,OAAQ,CACNC,QALQ,mCAMRC,SAAU,QACVC,eAAe,KAINT,EAAiB,mCAAG,sGACRG,EAASO,IAAI,wBADL,uBACvBC,EADuB,EACvBA,KADuB,kBAExBA,EAAKC,SAFmB,2CAAH,qDAKjBC,EAAgB,mCAAG,WAAMC,GAAN,yFACPX,EAASO,IAAI,gBAAiB,CACnDJ,OAAQ,CAAEQ,MAAAA,KAFkB,uBACtBH,EADsB,EACtBA,KADsB,kBAIvBA,EAAKC,SAJkB,2CAAH,sDAOhBG,EAAc,mCAAG,WAAM3B,GAAN,yFACLe,EAASO,IAAT,iBAAuBtB,IADlB,uBACpBuB,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,sDAKdK,EAAO,mCAAG,WAAM5B,GAAN,yFACEe,EAASO,IAAT,iBAAuBtB,EAAvB,aADF,uBACbuB,EADa,EACbA,KADa,kBAEdA,EAAKM,MAFS,2CAAH,sDAKPC,EAAU,mCAAG,WAAM9B,GAAN,yFACDe,EAASO,IAAT,iBAAuBtB,EAAvB,aADC,uBAChBuB,EADgB,EAChBA,KADgB,kBAEjBA,EAAKC,SAFY,2CAAH,qD","sources":["components/MovieList/MovieList.jsx","pages/HomePage/HomePage.jsx","services/api.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\n\nfunction MovieList({ moviesRoaster }) {\n  const location = useLocation();\n  return (\n    <ul>\n      {Array.isArray(moviesRoaster) &&\n        moviesRoaster.map(f => {\n          return (\n            <Link\n              state={{ from: location }}\n              key={f.id}\n              className=\"moviesStyle\"\n              to={`/movies/${f.id}`}\n            >\n              <h2>{f.name || f.title}</h2>\n            </Link>\n          );\n        })}\n    </ul>\n  );\n}\n\nexport default MovieList;\n\nMovieList.propTypes = {\n  moviesRoaster: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      name: PropTypes.string,\n      title: PropTypes.string,\n    }).isRequired\n  ).isRequired,\n};\n","import Loader from 'components/Loader/Loader';\nimport MovieList from 'components/MovieList/MovieList';\nimport React, { useEffect, useState } from 'react';\nimport { getTrendingMovies } from 'services/api';\n\nfunction HomePage() {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchTrends = async () => {\n      try {\n        setIsLoading(true);\n        const trending = await getTrendingMovies();\n        setTrendingMovies(trending);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchTrends();\n  }, []);\n\n  return (\n    <div>\n      <div>\n        <h1>Trending today</h1>\n        {error !== null && <p>Something went wrong {error}</p>}\n        {isLoading && <Loader />}\n        <MovieList moviesRoaster={trendingMovies} />\n      </div>\n    </div>\n  );\n}\n\nexport default HomePage;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = '4f78e0fa15d03d6a74908fc8e459b884';\n\nconst filmsAPI = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: KEY,\n    language: 'en-US',\n    include_adult: false,\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const { data } = await filmsAPI.get('/trending/movie/week');\n  return data.results;\n};\n\nexport const getMoviesByQuery = async query => {\n  const { data } = await filmsAPI.get('/search/movie', {\n    params: { query },\n  });\n  return data.results;\n};\n\nexport const getFilmDetails = async id => {\n  const { data } = await filmsAPI.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getCast = async id => {\n  const { data } = await filmsAPI.get(`/movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const getReviews = async id => {\n  const { data } = await filmsAPI.get(`/movie/${id}/reviews`);\n  return data.results;\n};\n"],"names":["moviesRoaster","location","useLocation","Array","isArray","map","f","state","from","className","to","id","name","title","useState","trendingMovies","setTrendingMovies","isLoading","setIsLoading","error","setError","useEffect","fetchTrends","getTrendingMovies","trending","message","filmsAPI","axios","baseURL","params","api_key","language","include_adult","get","data","results","getMoviesByQuery","query","getFilmDetails","getCast","cast","getReviews"],"sourceRoot":""}